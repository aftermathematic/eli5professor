FROM python:3.10-slim AS builder

WORKDIR /app

# Install dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --target=/app/deps \
    fastapi \
    uvicorn[standard] \
    pydantic \
    python-dotenv \
    openai \
    transformers \
    pyyaml \
    requests \
    discord.py \
    mlflow \
    pandas \
    scikit-learn && \
    pip install --no-cache-dir --target=/app/deps torch --index-url https://download.pytorch.org/whl/cpu

# Use a smaller base image for the final stage
FROM python:3.10-slim

WORKDIR /app

# Copy only the necessary dependencies
COPY --from=builder /app/deps /app/deps
ENV PYTHONPATH=/app/deps:$PYTHONPATH

# Copy source code (always available)
COPY src/ ./src/

# Create directories and default files for missing components
RUN mkdir -p /app/config /app/data

# Create default .env file if not available
RUN echo "# Default environment variables" > /app/.env && \
    echo "DISCORD_TOKEN=your_discord_token_here" >> /app/.env && \
    echo "OPENAI_API_KEY=your_openai_key_here" >> /app/.env && \
    echo "ENVIRONMENT=production" >> /app/.env

# Create default config files if not available
RUN echo "# Default configuration" > /app/config/default.yml

# Create sample data files
RUN echo "question,answer" > /app/data/eli5_dataset.csv && \
    echo "What is AI?,Artificial Intelligence is computer systems that can perform tasks that typically require human intelligence." >> /app/data/eli5_dataset.csv && \
    echo "id,text,label" > /app/data/dataset.csv && \
    echo "1,Sample text,sample" >> /app/data/dataset.csv && \
    echo "0" > /app/data/last_seen_id.txt

# Set up volume mount point for persistent data
VOLUME /app/data

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV LAST_SEEN_FILE=/app/data/last_seen_id.txt

# Default command to run the Discord bot with health check
CMD ["python", "src/discord_bot_with_health.py"]
